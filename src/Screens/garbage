// import React, { useState,useEffect } from 'react';
// import { View, TouchableOpacity, Image, TextInput, StyleSheet, Text } from 'react-native';
// import { launchImageLibrary } from 'react-native-image-picker';
// import { useDispatch, useSelector } from 'react-redux';
// import { useNavigation, useIsFocused } from '@react-navigation/native';
// import AntDesign from 'react-native-vector-icons/AntDesign';
// import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';
// import Ionicons from 'react-native-vector-icons/Ionicons';
// import Entypo from 'react-native-vector-icons/Entypo';
// import { setUserData, setEditData } from '../Redux/actions';
// import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
// import UserImage from '../assets/images/User.jpg';

// import { mainUrl } from '../config';

// const User = () => {
//     const { userData } = useSelector(state => state.auth);
//     const dispatch = useDispatch();
//     const navigation = useNavigation();
//     const isFocused = useIsFocused();
//     const [name, setName] = useState(userData?.user.name);
//     const [mobileNumber, setMobileNumber] = useState(userData?.user.mobile_no);
//     const [email, setEmail] = useState(userData?.user.email);
//     const [password, setPassword] = useState(userData.user.password);
//     const [profile, setProfile] = useState(userData.user.profile);
//     const [showPassword, setShowPassword] = useState(false);
//     const [selectedImage, setSelectedImage] = useState(null);
//     console.log('sadsahoidhasoihd',userData.user.profile);


//     const openImagePicker = () => {
//         const options = {
//             mediaType: 'photo',
//             includeBase64: false,
//         };

//         launchImageLibrary(options, response => {
//             console.log(response);
//             if (!response.didCancel && !response.error) {
//                 setSelectedImage(response.uri || response.assets?.[0]?.uri);
//                 setProfile(response.uri || response.assets?.[0]?.uri); // Update profile with selected image
//             }
//         });
//     };

//     const toggleShowPassword = () => {
//         setShowPassword(!showPassword);
//     };

//     useEffect(() => {
//         if (isFocused) {
//             // Your image reload logic here
//         }
//     }, [isFocused, selectedImage]);

//     console.log(userData.user.password);
//     const handleSubmit = () => {
//         const formData = new FormData();
//         formData.append('user_id', userData.user.id);
//         formData.append('name', name);
//         formData.append('email', email);
//         formData.append('mobile_no', mobileNumber);
//         formData.append('password', password);
//         // formData.append('profile', name); 
//         console.log(selectedImage);

//         if (selectedImage) {
//             formData.append('profile', {
//                 uri: selectedImage,
//                 type: 'image/jpeg',
//                 name: 'photo.jpg',
//             });
//         }


//         fetch(`${mainUrl}/Edit.php`, {
//             method: 'POST',
//             body: formData,
//         })
//             .then(response => response.json())
//             .then(data => {
//                 if (data.status === 200) {
//                     // Update user data in Redux state
//                     dispatch(
//                         setEditData(
//                             {
//                                 ...userData.user,
                                
//                                 email,
//                                 mobile_no: mobileNumber,
//                                 password,
//                                 profile: selectedImage, 
//                             })
//                     );
//                     alert('Profile updated successfully');
//                 } else {
//                     alert(data.message); 
//                 }
//             })
//             .catch(error => {
//                 console.error('Error:', error);
//             });
//     };


//     return (
//         <View>

//             <View style={{ flexDirection: 'row', justifyContent: 'space-between', paddingHorizontal: 5, height: 80, backgroundColor: '#3ba8a0' }}>
//                 <TouchableOpacity style={{ top: 20 }} onPress={() => navigation.goBack()}>
//                     <Ionicons name="arrow-back-outline" size={40} color="black" />
//                 </TouchableOpacity>
//                 <Text style={{ alignSelf: 'center', fontSize: 20, fontWeight: 'bold', color: 'black' }}>Edit Profile</Text>
//                 <TouchableOpacity style={{ top: 20 }} onPress={handleSubmit}>
//                     <AntDesign name="check" size={40} color="black" />
//                 </TouchableOpacity>
//             </View>

//             <View style={{ top: 80 }}>
//                 {profile? (
//                     <Image
//                         source={{ uri: selectedImage || `${mainUrl}/${profile}` }}
//                         style={{ width: 150, height: 150, alignSelf: 'center', borderRadius: 80 }}
//                         resizeMode="contain"
//                     />
//                 ) : (
//                     <Image
//                         source={UserImage}
//                         style={{ width: 150, height: 150, alignSelf: 'center', borderRadius: 80 }}
//                         resizeMode="contain"
//                     />
//                 )}

//                 <TouchableOpacity onPress={openImagePicker}>
//                     <Text style={{ alignSelf: 'center', color: 'blue', top: 10 }}>Edit Picture</Text>
//                 </TouchableOpacity>
//             </View>
//             <View style={{ top: 200 }}>
//                 <View style={styles.inputContainer}>
//                     <MaterialCommunityIcons name="account" size={24} color="black" />
//                     <TextInput
//                         style={styles.input}
//                         value={name}
//                         onChangeText={setName}
//                         placeholder="Name"
//                     />
//                 </View>
//                 <View style={styles.inputContainer}>
//                     <MaterialCommunityIcons name="phone" size={24} color="black" />
//                     <TextInput
//                         style={styles.input}
//                         value={mobileNumber}
//                         onChangeText={setMobileNumber}
//                         placeholder="Mobile Number"
//                     />
//                 </View>
//                 <View style={styles.inputContainer}>
//                     <MaterialCommunityIcons name="email" size={24} color="black" />
//                     <TextInput
//                         style={styles.input}
//                         value={email}
//                         onChangeText={setEmail}
//                         placeholder="Email"
//                     />
//                 </View>
//                 {/* <Text style={{color:'black'}}>Company</Text> */}
//                 <View style={styles.inputContainer}>
//                     <Entypo
//                         name={showPassword ? 'eye' : 'eye-with-line'}
//                         size={24}
//                         color="black"
//                         style={styles.icon}
//                         onPress={toggleShowPassword}
//                     />
//                     <TextInput
//                         style={styles.input}
//                         value={password}
//                         onChangeText={setPassword}
//                         placeholder="Password"
//                         secureTextEntry={!showPassword}
//                     />
//                 </View>
//             </View>
//         </View>
//     );
// };

// const styles = StyleSheet.create({
//     inputContainer: {
//         flexDirection: 'row',
//         alignItems: 'center',
//         paddingHorizontal: 10,
//         paddingVertical: 5,
//         borderBottomWidth: 1,
//         borderColor: 'lightgray',
//         marginHorizontal: 20,
//     },
//     input: {
//         marginLeft: 10,
//         flex: 1,
//         fontSize: 16,
//     },
// });

// export default User;

















// <?php
// header("Access-Control-Allow-Origin: *");
// header("Access-Control-Allow-Methods: GET, POST, OPTIONS");
// header("Access-Control-Allow-Headers: Content-Type");
// header("Access-Control-Allow-Credentials: true");

// include "Database.php";

// if ($conn->connect_error) {
//     die("Connection failed: " . $conn->connect_error);
// }

// // Check if user ID is provided for update
// if (!isset($_POST['user_id']) || empty($_POST['user_id'])) {
//     http_response_code(400);
//     echo json_encode(array("status" => 400, "message" => "User ID is missing"));
//     exit;
// }

// $user_id = $conn->real_escape_string($_POST['user_id']);

// // Check if the provided user ID exists
// $userCheckQuery = "SELECT * FROM users WHERE id = '$user_id'";
// $userCheckResult = $conn->query($userCheckQuery);

// if ($userCheckResult->num_rows == 0) {
//     http_response_code(404);
//     echo json_encode(array("status" => 404, "message" => "User not found"));
//     exit;
// }

// // Prepare the update query
// $updateFields = [];

// // Define fields to be updated and their corresponding database column names
// $updateMappings = array(
//     "name" => "name",
//     "email" => "email",
//     "company_id" => "company_id",
//     "mobile_no" => "mobile_no",
//     "password" => "password"
// );

// // Loop through each possible field to update
// foreach ($updateMappings as $fieldName => $columnName) {
//     if (isset($_POST[$fieldName]) && !empty($_POST[$fieldName])) {
//         $fieldValue = $conn->real_escape_string($_POST[$fieldName]);
//         $updateFields[] = "$columnName = '$fieldValue'";
//     }
// }

// // If profile image is provided, handle it separately
// if (isset($_FILES["profile"]) && !empty($_FILES["profile"]["tmp_name"])) {
//     $target_dir = "uploads/";
//     $target_file = $target_dir . uniqid() . basename($_FILES["profile"]["name"]);
//     $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));

//     // Check file size
//     if ($_FILES["profile"]["size"] > 5000000) {
//         echo json_encode(array("status" => 201, "message" => "Sorry, your file is too large."));
//         exit;
//     }

//     // Allow certain file formats
//     if ($imageFileType != "jpg" && $imageFileType != "png" && $imageFileType != "jpeg") {
//         echo json_encode(array("status" => 201, "message" => "Sorry, only JPG, JPEG, PNG files are allowed."));
//         exit;
//     }

//     // Move uploaded file to target directory
//     if (move_uploaded_file($_FILES["profile"]["tmp_name"], $target_file)) {
//         // Add the profile image path to update fields
//         $updateFields[] = "profile = '$target_file'";
//     } else {
//         echo json_encode(array("status" => 201, "message" => "Sorry, there was an error uploading your file."));
//         exit;
//     }
// }

// // If there are fields to update, execute the update query
// if (!empty($updateFields)) {
//     $updateQuery = "UPDATE users SET " . implode(", ", $updateFields) . " WHERE id = '$user_id'";
//     if ($conn->query($updateQuery) === TRUE) {
//         http_response_code(200);
//         echo json_encode(array("status" => 200, "message" => "Updated Profile successfully"));
//     } else {
//         http_response_code(500);
//         $errorMsg = "Error updating user: " . $conn->error;
//         error_log($errorMsg);
//         echo json_encode(array("error" => 500, "message" => "Internal Server Error"));
//     }
// } else {
//     http_response_code(400);
//     echo json_encode(array("status" => 400, "message" => "No fields to update"));
// }

// $conn->close();
// ?>
